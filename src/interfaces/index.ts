import mongoose from "mongoose";

export interface UserType {
  _id: string;
  name: string;
  email: string;
  clerkUserId: string;
  profilePic: string;
  isAdmin: boolean;
  bio: string;
  portfolio: string;
  isApproved: boolean;
  skills: string[]; 
  currentSubscription: {
    _id: string;
    plan: any;
    expiryDate: string;
    createdAt: string;
    price: number;
    paymentId: string;
  } | null;
  createdAt: string;
  updatedAt: string;
  isActive: boolean;
}
export interface TaskType {
  _id: string;
  title: string;
  subTitle: string;
  description: string;
  skillsRequired: string[];
  lastDateToPlaceBid: string;
  attachments: { name: string; url: string }[];
  isActive: boolean;
  bidsReceived: number;
  user: UserType;
  createdAt: string;
}
export interface NotificationType {
  _id: string;
  user: UserType | null;
  sender: UserType |null;
  type: string;
  text: string;
  onClickPath: string;
  read: boolean;
  createdAt: string;
}
export interface BidType {
  _id: string;
  task: TaskType;
  freelancer: UserType;
  client: UserType;
  bidAmount: number;
  estimatedDays: number;
  message: string;
  createdAt: string;
}
export interface ReviewType {
  _id: string;             
  task: TaskType;       
  user: UserType;          
  review: string;          
  rating: number;           
  createdAt: string;        
  updatedAt: string;      
}
export interface ChatType {
  sender: UserType ;
  receiver: UserType ;
  conversationId: String,
  isRead: Boolean,
  message: string;
  createdAt: string;
  updatedAt: string;
}

export interface AllotedTaskType {
  sender: UserType | null,
  receiver: UserType | null, 
  task: TaskType, 
  createdAt: string;
  updatedAt: string;
  attachments: { name: string; url: string }[];
  isPayed: boolean;
  isVerified: boolean;
}

export interface SubmittedTaskType {
  _id?: string; // Optional _id, will be generated by MongoDB
  sender: UserType; // Sender details as UserType
  receiver: UserType; // Receiver details as UserType
  task: TaskType; // Task details as TaskType
  isPayed: boolean; // Payment status
  isVerified: boolean; // Verification status
  attachments: { name: string; url: string }[]; // Array of attachment objects
  createdAt?: Date; // Optional, automatically generated
  updatedAt?: Date; // Optional, automatically generated
}


